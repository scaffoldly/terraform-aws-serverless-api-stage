// generated by cdktf get
// scaffoldly/serverless-api-stage/aws
import { TerraformModule, TerraformModuleUserConfig } from 'cdktf';
import { Construct } from 'constructs';
export interface ServerlessApiStageConfig extends TerraformModuleUserConfig {
  /**
  * Allow Objects in the bucket with a Public ACL
  */
  readonly bucketAllowPublicAccess?: boolean;
  /**
  * Set the bucket name, default: var.repository_name
  */
  readonly bucketName?: string;
  /**
  * Create an S3 Bucket for the Service
  * true
  */
  readonly createBucket?: boolean;
  /**
  * Create SNS Topics for the service
  * true
  */
  readonly createTopic?: boolean;
  /**
  * The domain for the Serverless API
  */
  readonly domain?: string;
  /**
  * The name of the Serverless API
  */
  readonly path?: string;
  /**
  * If true, create a regional Serverless API
  */
  readonly regional?: boolean;
  /**
  * The GitHub Repository Name
  */
  readonly repositoryName: string;
  /**
  * The root prinicipal. In most cases leave this as 'root'
  * root
  */
  readonly rootPrincipal?: string;
  /**
  * Output of trust from saml-to/iam/aws module
  */
  readonly samlTrust?: any;
  /**
  * The stage (e.g. live, nonlive)
  */
  readonly stage: string;
  /**
  * The KMS Key ID for the stage (optional)
  */
  readonly stageKmsKeyId?: string;
  /**
  * (Optional) Enable a websocket for this stage
  */
  readonly websocket?: boolean;
  /**
  * (Optional) The custom domain for the websocket (if using a custom domain)
  */
  readonly websocketDomain?: string;
}
/**
* Defines an ServerlessApiStage based on a Terraform module
*
* Docs at Terraform Registry: {@link https://registry.terraform.io/modules/scaffoldly/serverless-api-stage/aws/1.0.41 scaffoldly/serverless-api-stage/aws}
*/
export class ServerlessApiStage extends TerraformModule {
  private readonly inputs: { [name: string]: any } = { }
  public constructor(scope: Construct, id: string, config: ServerlessApiStageConfig) {
    super(scope, id, {
      ...config,
      source: 'scaffoldly/serverless-api-stage/aws',
      version: '1.0.41',
    });
    this.bucketAllowPublicAccess = config.bucketAllowPublicAccess;
    this.bucketName = config.bucketName;
    this.createBucket = config.createBucket;
    this.createTopic = config.createTopic;
    this.domain = config.domain;
    this.path = config.path;
    this.regional = config.regional;
    this.repositoryName = config.repositoryName;
    this.rootPrincipal = config.rootPrincipal;
    this.samlTrust = config.samlTrust;
    this.stage = config.stage;
    this.stageKmsKeyId = config.stageKmsKeyId;
    this.websocket = config.websocket;
    this.websocketDomain = config.websocketDomain;
  }
  public get bucketAllowPublicAccess(): boolean | undefined {
    return this.inputs['bucket_allow_public_access'] as boolean | undefined;
  }
  public set bucketAllowPublicAccess(value: boolean | undefined) {
    this.inputs['bucket_allow_public_access'] = value;
  }
  public get bucketName(): string | undefined {
    return this.inputs['bucket_name'] as string | undefined;
  }
  public set bucketName(value: string | undefined) {
    this.inputs['bucket_name'] = value;
  }
  public get createBucket(): boolean | undefined {
    return this.inputs['create_bucket'] as boolean | undefined;
  }
  public set createBucket(value: boolean | undefined) {
    this.inputs['create_bucket'] = value;
  }
  public get createTopic(): boolean | undefined {
    return this.inputs['create_topic'] as boolean | undefined;
  }
  public set createTopic(value: boolean | undefined) {
    this.inputs['create_topic'] = value;
  }
  public get domain(): string | undefined {
    return this.inputs['domain'] as string | undefined;
  }
  public set domain(value: string | undefined) {
    this.inputs['domain'] = value;
  }
  public get path(): string | undefined {
    return this.inputs['path'] as string | undefined;
  }
  public set path(value: string | undefined) {
    this.inputs['path'] = value;
  }
  public get regional(): boolean | undefined {
    return this.inputs['regional'] as boolean | undefined;
  }
  public set regional(value: boolean | undefined) {
    this.inputs['regional'] = value;
  }
  public get repositoryName(): string {
    return this.inputs['repository_name'] as string;
  }
  public set repositoryName(value: string) {
    this.inputs['repository_name'] = value;
  }
  public get rootPrincipal(): string | undefined {
    return this.inputs['root_principal'] as string | undefined;
  }
  public set rootPrincipal(value: string | undefined) {
    this.inputs['root_principal'] = value;
  }
  public get samlTrust(): any | undefined {
    return this.inputs['saml_trust'] as any | undefined;
  }
  public set samlTrust(value: any | undefined) {
    this.inputs['saml_trust'] = value;
  }
  public get stage(): string {
    return this.inputs['stage'] as string;
  }
  public set stage(value: string) {
    this.inputs['stage'] = value;
  }
  public get stageKmsKeyId(): string | undefined {
    return this.inputs['stage_kms_key_id'] as string | undefined;
  }
  public set stageKmsKeyId(value: string | undefined) {
    this.inputs['stage_kms_key_id'] = value;
  }
  public get websocket(): boolean | undefined {
    return this.inputs['websocket'] as boolean | undefined;
  }
  public set websocket(value: boolean | undefined) {
    this.inputs['websocket'] = value;
  }
  public get websocketDomain(): string | undefined {
    return this.inputs['websocket_domain'] as string | undefined;
  }
  public set websocketDomain(value: string | undefined) {
    this.inputs['websocket_domain'] = value;
  }
  public get apiIdOutput() {
    return this.getString('api_id')
  }
  public get basePathOutput() {
    return this.getString('base_path')
  }
  public get bucketNameOutput() {
    return this.getString('bucket_name')
  }
  public get domainOutput() {
    return this.getString('domain')
  }
  public get nameOutput() {
    return this.getString('name')
  }
  public get repositoryNameOutput() {
    return this.getString('repository_name')
  }
  public get restUrlOutput() {
    return this.getString('rest_url')
  }
  public get roleArnOutput() {
    return this.getString('role_arn')
  }
  public get rootResourceIdOutput() {
    return this.getString('root_resource_id')
  }
  public get s3TopicArnOutput() {
    return this.getString('s3_topic_arn')
  }
  public get stageOutput() {
    return this.getString('stage')
  }
  public get topicArnOutput() {
    return this.getString('topic_arn')
  }
  public get urlOutput() {
    return this.getString('url')
  }
  public get websocketApiIdOutput() {
    return this.getString('websocket_api_id')
  }
  public get websocketUrlOutput() {
    return this.getString('websocket_url')
  }
  protected synthesizeAttributes() {
    return this.inputs;
  }
}
